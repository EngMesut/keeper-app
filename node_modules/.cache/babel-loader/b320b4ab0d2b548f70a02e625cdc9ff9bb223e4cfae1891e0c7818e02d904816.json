{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import Note from \"./Note\";\n// import CreateArea from \"./CreateArea\";\n\n//   function App() {\n//   const [notes, setNotes] = useState([]);\n// const [editingNote, setEditingNote] = React.useState(null);\n\n// function handleEdit(id) {\n// const noteToEdit = notes.find((note) => note.id === id);\n// setEditingNote(noteToEdit);\n// }\n\n// function saveEdit(updatedNote) {\n// setNotes((prevNotes) =>\n//   prevNotes.map((note) =>\n//     note.id === updatedNote.id ? updatedNote : note\n//   )\n// );\n// setEditingNote(null); // Exit edit mode\n// }\n\n//   function addNote(newNote) {\n//     setNotes(prevNotes => {\n//       return [...prevNotes, newNote];\n//     });\n//   }\n\n//   function deleteNote(id) {\n//     setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\n//   }\n\n//   return (\n//     <div>\n//       <Header />\n//       <CreateArea\n//   onAdd={addNote}\n//   editingNote={editingNote}\n//   saveEdit={saveEdit}\n//   onDelete={deleteNote}\n// />\n\n// {notes.map((noteItem) => (\n//   <Note\n//     key={noteItem.id}\n//     id={noteItem.id}\n//     title={noteItem.title}\n//     content={noteItem.content}\n//     onDelete={deleteNote}\n//     onEdit={handleEdit}\n//   />\n// ))}\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nexport default App;","map":{"version":3,"names":["App"],"sources":["C:/Users/ENG/Desktop/keeper-app/src/components/App.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Header from \"./Header\";\r\n// import Footer from \"./Footer\";\r\n// import Note from \"./Note\";\r\n// import CreateArea from \"./CreateArea\";\r\n\r\n//   function App() {\r\n//   const [notes, setNotes] = useState([]);\r\n  // const [editingNote, setEditingNote] = React.useState(null);\r\n  \r\n  // function handleEdit(id) {\r\n  // const noteToEdit = notes.find((note) => note.id === id);\r\n  // setEditingNote(noteToEdit);\r\n  // }\r\n\r\n  // function saveEdit(updatedNote) {\r\n  // setNotes((prevNotes) =>\r\n  //   prevNotes.map((note) =>\r\n  //     note.id === updatedNote.id ? updatedNote : note\r\n  //   )\r\n  // );\r\n  // setEditingNote(null); // Exit edit mode\r\n  // }\r\n\r\n//   function addNote(newNote) {\r\n//     setNotes(prevNotes => {\r\n//       return [...prevNotes, newNote];\r\n//     });\r\n//   }\r\n\r\n//   function deleteNote(id) {\r\n//     setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <Header />\r\n//       <CreateArea\r\n//   onAdd={addNote}\r\n//   editingNote={editingNote}\r\n//   saveEdit={saveEdit}\r\n//   onDelete={deleteNote}\r\n// />\r\n\r\n// {notes.map((noteItem) => (\r\n//   <Note\r\n//     key={noteItem.id}\r\n//     id={noteItem.id}\r\n//     title={noteItem.title}\r\n//     content={noteItem.content}\r\n//     onDelete={deleteNote}\r\n//     onEdit={handleEdit}\r\n//   />\r\n// ))}\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\nexport default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}