{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENG\\\\Desktop\\\\keeper-app\\\\src\\\\components\\\\CreateArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Zoom from \"@mui/material/Zoom\";\nimport Fab from \"@mui/material/Fab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateArea({\n  onAdd,\n  editingNote,\n  saveEdit\n}) {\n  _s();\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  // Populate the form with the note being edited\n  useEffect(() => {\n    if (editingNote) {\n      setNote(editingNote);\n    } else {\n      setNote({\n        title: \"\",\n        content: \"\"\n      });\n    }\n  }, [editingNote]);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevNote => ({\n      ...prevNote,\n      [name]: value\n    }));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (editingNote) {\n      saveEdit(note); // Save the edited note\n    } else {\n      onAdd(note); // Add a new note\n    }\n    setNote({\n      title: \"\",\n      content: \"\"\n    }); // Clear form\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: note.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Take a note...\",\n      rows: \"3\",\n      value: note.content,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      children: [\"//         \", /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: handleSubmit,\n        children: [\"//           \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this), \"//         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), \"//       \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateArea, \"h6koRfROXDaVK4QfoNrkErPj5Vc=\");\n_c = CreateArea;\nexport default CreateArea;\n\n// import React, { useState, useEffect } from \"react\";\n// import AddIcon from \"@mui/icons-material/Add\";\n// import Zoom from \"@mui/material/Zoom\";\n// import Fab from \"@mui/material/Fab\";\n\n// function CreateArea({ onAdd, editingNote, saveEdit }) {\n//   const [note, setNote] = useState({ title: \"\", content: \"\" });\n\n//   useEffect(() => {\n//     if (editingNote) {\n//       setNote(editingNote);\n//     }\n//   }, [editingNote]);\n\n//   function handleChange(event) {\n//     const { name, value } = event.target;\n//     setNote((prevNote) => ({\n//       ...prevNote,\n//       [name]: value,\n//     }));\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     if (editingNote) {\n//       saveEdit(note);\n//     } else {\n//       onAdd(note);\n//     }\n//     setNote({ title: \"\", content: \"\" });\n//   }\n\n//   return (\n//     <form className=\"create-note\">\n//       <input\n//         name=\"title\"\n//         onChange={handleChange}\n//         value={note.title}\n//         placeholder=\"Title\"\n//       />\n//       <textarea\n//         name=\"content\"\n//         onChange={handleChange}\n//         value={note.content}\n//         placeholder=\"Take a note...\"\n//         rows=\"3\"\n//       />\n//       <Zoom in={true}>\n//         <Fab onClick={handleSubmit}>\n//           <AddIcon />\n//         </Fab>\n//       </Zoom>\n//     </form>\n//   );\n// }\n\n// export default CreateArea;\nvar _c;\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"names":["React","useState","useEffect","AddIcon","Zoom","Fab","jsxDEV","_jsxDEV","CreateArea","onAdd","editingNote","saveEdit","_s","note","setNote","title","content","handleChange","event","name","value","target","prevNote","handleSubmit","preventDefault","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","rows","in","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ENG/Desktop/keeper-app/src/components/CreateArea.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\nimport Fab from \"@mui/material/Fab\";\r\n\r\nfunction CreateArea({ onAdd, editingNote, saveEdit }) {\r\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n\r\n  // Populate the form with the note being edited\r\n  useEffect(() => {\r\n    if (editingNote) {\r\n      setNote(editingNote);\r\n    } else {\r\n      setNote({ title: \"\", content: \"\" });\r\n    }\r\n  }, [editingNote]);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => ({\r\n      ...prevNote,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (editingNote) {\r\n      saveEdit(note); // Save the edited note\r\n    } else {\r\n      onAdd(note); // Add a new note\r\n    }\r\n    setNote({ title: \"\", content: \"\" }); // Clear form\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={note.title}\r\n        onChange={handleChange}\r\n      />\r\n      <textarea\r\n        name=\"content\"\r\n        placeholder=\"Take a note...\"\r\n        rows=\"3\"\r\n        value={note.content}\r\n        onChange={handleChange}\r\n      />\r\n      <Zoom in={true}>\r\n//         <Fab onClick={handleSubmit}>\r\n//           <AddIcon />\r\n//         </Fab>\r\n//       </Zoom>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import AddIcon from \"@mui/icons-material/Add\";\r\n// import Zoom from \"@mui/material/Zoom\";\r\n// import Fab from \"@mui/material/Fab\";\r\n\r\n// function CreateArea({ onAdd, editingNote, saveEdit }) {\r\n//   const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n\r\n//   useEffect(() => {\r\n//     if (editingNote) {\r\n//       setNote(editingNote);\r\n//     }\r\n//   }, [editingNote]);\r\n\r\n//   function handleChange(event) {\r\n//     const { name, value } = event.target;\r\n//     setNote((prevNote) => ({\r\n//       ...prevNote,\r\n//       [name]: value,\r\n//     }));\r\n//   }\r\n\r\n//   function handleSubmit(event) {\r\n//     event.preventDefault();\r\n//     if (editingNote) {\r\n//       saveEdit(note);\r\n//     } else {\r\n//       onAdd(note);\r\n//     }\r\n//     setNote({ title: \"\", content: \"\" });\r\n//   }\r\n\r\n//   return (\r\n//     <form className=\"create-note\">\r\n//       <input\r\n//         name=\"title\"\r\n//         onChange={handleChange}\r\n//         value={note.title}\r\n//         placeholder=\"Title\"\r\n//       />\r\n//       <textarea\r\n//         name=\"content\"\r\n//         onChange={handleChange}\r\n//         value={note.content}\r\n//         placeholder=\"Take a note...\"\r\n//         rows=\"3\"\r\n//       />\r\n//       <Zoom in={true}>\r\n//         <Fab onClick={handleSubmit}>\r\n//           <AddIcon />\r\n//         </Fab>\r\n//       </Zoom>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default CreateArea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}