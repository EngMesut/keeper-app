{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENG\\\\Desktop\\\\keeper-app\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import Note from \"./Note\";\n// import CreateArea from \"./CreateArea\";\n\n//   function App() {\n//   const [notes, setNotes] = useState([]);\n// const [editingNote, setEditingNote] = React.useState(null);\n\nfunction handleEdit(id) {\n  const noteToEdit = notes.find(note => note.id === id);\n  setEditingNote(noteToEdit);\n}\n\n// function saveEdit(updatedNote) {\n// setNotes((prevNotes) =>\n//   prevNotes.map((note) =>\n//     note.id === updatedNote.id ? updatedNote : note\n//   )\n// );\n// setEditingNote(null); // Exit edit mode\n// }\n\n//   function addNote(newNote) {\n//     setNotes(prevNotes => {\n//       return [...prevNotes, newNote];\n//     });\n//   }\n\n//   function deleteNote(id) {\n//     setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\n//   }\n\n//   return (\n//     <div>\n//       <Header />\n//       <CreateArea\n//   onAdd={addNote}\n//   editingNote={editingNote}\n//   saveEdit={saveEdit}\n//   onDelete={deleteNote}\n// />\n\n// {notes.map((noteItem) => (\n//   <Note\n//     key={noteItem.id}\n//     id={noteItem.id}\n//     title={noteItem.title}\n//     content={noteItem.content}\n//     onDelete={deleteNote}\n//     onEdit={handleEdit}\n//   />\n// ))}\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [editingNote, setEditingNote] = React.useState(null);\n  function addNote(newNote) {\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  }\n  function saveEdit(updatedNote) {\n    setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n    setEditingNote(null); // Exit edit mode\n  }\n  function deleteNote(id) {\n    setNotes(prevNotes => prevNotes.filter((note, index) => index !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), notes.map((note, index) => /*#__PURE__*/_jsxDEV(Note, {\n      id: index,\n      title: note.title,\n      content: note.content,\n      onDelete: deleteNote\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LDfAU50Iim+hAS6fLm5BFfgi7oc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["handleEdit","id","noteToEdit","notes","find","note","setEditingNote","React","useState","Note","CreateArea","jsxDEV","_jsxDEV","App","_s","setNotes","editingNote","addNote","newNote","prevNotes","saveEdit","updatedNote","map","deleteNote","filter","index","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/ENG/Desktop/keeper-app/src/components/App.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import Header from \"./Header\";\r\n// import Footer from \"./Footer\";\r\n// import Note from \"./Note\";\r\n// import CreateArea from \"./CreateArea\";\r\n\r\n//   function App() {\r\n//   const [notes, setNotes] = useState([]);\r\n  // const [editingNote, setEditingNote] = React.useState(null);\r\n  \r\n  function handleEdit(id) {\r\n  const noteToEdit = notes.find((note) => note.id === id);\r\n  setEditingNote(noteToEdit);\r\n  }\r\n\r\n  // function saveEdit(updatedNote) {\r\n  // setNotes((prevNotes) =>\r\n  //   prevNotes.map((note) =>\r\n  //     note.id === updatedNote.id ? updatedNote : note\r\n  //   )\r\n  // );\r\n  // setEditingNote(null); // Exit edit mode\r\n  // }\r\n\r\n//   function addNote(newNote) {\r\n//     setNotes(prevNotes => {\r\n//       return [...prevNotes, newNote];\r\n//     });\r\n//   }\r\n\r\n//   function deleteNote(id) {\r\n//     setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <Header />\r\n//       <CreateArea\r\n//   onAdd={addNote}\r\n//   editingNote={editingNote}\r\n//   saveEdit={saveEdit}\r\n//   onDelete={deleteNote}\r\n// />\r\n\r\n// {notes.map((noteItem) => (\r\n//   <Note\r\n//     key={noteItem.id}\r\n//     id={noteItem.id}\r\n//     title={noteItem.title}\r\n//     content={noteItem.content}\r\n//     onDelete={deleteNote}\r\n//     onEdit={handleEdit}\r\n//   />\r\n// ))}\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from \"react\";\r\n// import Header from \"./Header\";\r\n// import Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [editingNote, setEditingNote] = React.useState(null);\r\n\r\n  function addNote(newNote) {\r\n    setNotes((prevNotes) => [...prevNotes, newNote]);\r\n  }\r\n  function saveEdit(updatedNote) {\r\n    setNotes((prevNotes) =>\r\n      prevNotes.map((note) =>\r\n        note.id === updatedNote.id ? updatedNote : note\r\n      )\r\n    );\r\n    setEditingNote(null); // Exit edit mode\r\n    }\r\n  function deleteNote(id) {\r\n    setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CreateArea onAdd={addNote} />\r\n      {notes.map((note, index) => (\r\n        <Note\r\n          key={index}\r\n          id={index}\r\n          title={note.title}\r\n          content={note.content}\r\n          onDelete={deleteNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACE;;AAEA,SAASA,UAAUA,CAACC,EAAE,EAAE;EACxB,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;EACvDK,cAAc,CAACJ,UAAU,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOK,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEV,cAAc,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EAE1D,SAASS,OAAOA,CAACC,OAAO,EAAE;IACxBH,QAAQ,CAAEI,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD;EACA,SAASE,QAAQA,CAACC,WAAW,EAAE;IAC7BN,QAAQ,CAAEI,SAAS,IACjBA,SAAS,CAACG,GAAG,CAAEjB,IAAI,IACjBA,IAAI,CAACJ,EAAE,KAAKoB,WAAW,CAACpB,EAAE,GAAGoB,WAAW,GAAGhB,IAC7C,CACF,CAAC;IACDC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB;EACF,SAASiB,UAAUA,CAACtB,EAAE,EAAE;IACtBc,QAAQ,CAAEI,SAAS,IAAKA,SAAS,CAACK,MAAM,CAAC,CAACnB,IAAI,EAAEoB,KAAK,KAAKA,KAAK,KAAKxB,EAAE,CAAC,CAAC;EAC1E;EAEA,oBACEW,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACF,UAAU;MAACiB,KAAK,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7B5B,KAAK,CAACmB,GAAG,CAAC,CAACjB,IAAI,EAAEoB,KAAK,kBACrBb,OAAA,CAACH,IAAI;MAEHR,EAAE,EAAEwB,KAAM;MACVO,KAAK,EAAE3B,IAAI,CAAC2B,KAAM;MAClBC,OAAO,EAAE5B,IAAI,CAAC4B,OAAQ;MACtBC,QAAQ,EAAEX;IAAW,GAJhBE,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAjCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}